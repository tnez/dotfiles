# Set prefix to Ctrl-a
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Remap escape time to accommodate 'kj' escape sequence in Neovim
set -s escape-time 0

# Use vi mode for copy mode
setw -g mode-keys vi

# Enable mouse support
set -g mouse on

# Set pane and window numbering to start at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# Set default terminal mode to 256color
set -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# Split panes using | and -
unbind '"'
bind / split-window -h -c "#{pane_current_path}"
unbind %
bind - split-window -c "#{pane_current_path}"

# Kill pane w/o confirmation
unbind x
bind x kill-pane

# Navigating splits
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Copy mode stuff
unbind y
bind y copy-mode
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Rename window
bind , command-prompt "rename-window %%"
bind l next-window
bind h previous-window

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Set up status bar
set -g status-position top
set -g status-bg black
set -g status-fg white
set -g status-left-length 30
set -g status-right-length 30
set -g status-left "#[fg=cyan] "
set -g status-right "#[bg=black]#[fg=cyan] #[bg=cyan]#[fg=black]#S#[bg=default]#[fg=cyan] "

# Window title colors
setw -g window-status-current-format "#[bg=default]#[fg=cyan] #[bg=cyan]#[fg=black]#I  #W #[bg=default]#[fg=cyan]"
setw -g window-status-format "#[fg=default] #[bg=white]#[fg=black]#I  #W #[bg=default]#[fg=white]"
setw -g window-status-separator ""


# Renumber windows when a window is closed
set-option -g renumber-windows on
